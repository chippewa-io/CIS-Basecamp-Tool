<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<computer_extension_attribute>
    <id>5</id>
    <name>CIS Benchmark | Logging &amp; Auditing</name>
    <enabled>true</enabled>
    <description>This extension attribute will analyze the most recent log generated by the CIS Benchmark script for the specific tests regarding Logging &amp; Auditing</description>
    <data_type>String</data_type>
    <input_type>
        <type>script</type>
        <platform>Mac</platform>
        <script>#!/bin/zsh
###############################################################################
#                                                                             
# -                  CIS Benchmark Assessment Logging &amp; Auditing EA                     
#                                                                             
# Copyright (C) Thursday, March 2, 2023, Chippewa Limited Liability Co.                                       
#                                                                             
# This script is the property of Chippewa Limited Liability Co. and is intended for internal     
# use only. This script may not be distributed, reproduced, or used in any    
# manner without the expressed written consent of Chippewa Limited Liability Co..                
#                                                                             
# This script is provided "AS IS" and WITHOUT WARRANTY OF ANY KIND,           
# EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED     
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.         
#                                                                                                         
###############################################################################
file=$(ls -t /Library/Application\ Support/Security\ Audit | head -n 1)
log="/Library/Application Support/Security Audit/$file"
fail=$(grep ",3." "$log" | grep -c "FAIL" )
threshold=1 #user modifiable to allow for leniancy 

if [ $fail -ge $threshold ]; then
	echo "&lt;result&gt;FAIL&lt;/result&gt;"
else
	echo "&lt;result&gt;PASS&lt;/result&gt;"
fi</script>
    </input_type>
    <inventory_display>General</inventory_display>
</computer_extension_attribute>